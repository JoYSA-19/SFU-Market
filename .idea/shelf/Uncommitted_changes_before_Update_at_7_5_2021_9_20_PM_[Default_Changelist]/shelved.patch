Index: app/src/main/java/com/example/myapplication/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.myapplication;\r\n\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.core.content.FileProvider;\r\n\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\nimport retrofit2.Retrofit;\r\nimport retrofit2.converter.gson.GsonConverterFactory;\r\n\r\nimport android.Manifest;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.os.Environment;\r\nimport android.provider.MediaStore;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.Toast;\r\n\r\nimport org.jetbrains.annotations.NotNull;\r\n\r\nimport java.io.File;\r\nimport java.io.IOException;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    private Retrofit retrofit;\r\n    private RetrofitInterface retrofitInterface;\r\n    private final String BASE_URL = \"http://10.0.2.2:3000\";\r\n    private String currentPhotoPath;\r\n    private Uri pickedImgUri = null;\r\n    private static final int PReqCode = 2 ;\r\n    private static final int UPLOADCODE = 1 ;\r\n    private static final int CAMERACODE = 2 ;\r\n\r\n    Button postBtn;\r\n    ImageButton cameraBtn,uploadBtn;\r\n    ImageView imageView;\r\n\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        retrofit = new Retrofit.Builder()\r\n                .baseUrl(BASE_URL)\r\n                .addConverterFactory(GsonConverterFactory.create())\r\n                .build();\r\n\r\n        retrofitInterface = retrofit.create(RetrofitInterface.class);\r\n\r\n        findViewById(R.id.btnMakePost).setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                handlePostDialog();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void handlePostDialog() {\r\n        View view = getLayoutInflater().inflate(R.layout.data_entry_dialog, null);\r\n\r\n        AlertDialog builder = new AlertDialog.Builder(this).create();\r\n\r\n        builder.setView(view);\r\n        builder.show();\r\n\r\n        //assigning text fields and buttons to a variable\r\n        cameraBtn = view.findViewById(R.id.cameraButton);\r\n        postBtn = view.findViewById(R.id.btnPost);\r\n        imageView = view.findViewById(R.id.imageView);\r\n        uploadBtn = view.findViewById(R.id.uploadImageButton);\r\n\r\n\r\n        String itemName = view.findViewById(R.id.textName).toString();\r\n        String itemDescription = view.findViewById(R.id.textDescription).toString();\r\n        String textContact = view.findViewById(R.id.textContact).toString();\r\n        PostInformation userInfo = new PostInformation();\r\n        userInfo.name = itemName;\r\n        userInfo.description = itemDescription;\r\n        userInfo.contact = textContact;\r\n\r\n        postBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                Call<Void> call = retrofitInterface.executePost(userInfo);\r\n\r\n                call.enqueue(new Callback<Void>() {\r\n                    @Override\r\n                    public void onResponse(@NotNull Call<Void> call, @NotNull Response<Void> response) {\r\n                        if (response.code() == 200) {\r\n                            Toast.makeText(MainActivity.this,\r\n                                    \"Post Created Successfully\", Toast.LENGTH_LONG).show();\r\n                        }\r\n                    }\r\n                    @Override\r\n                    public void onFailure(@NotNull Call<Void> call, @NotNull Throwable t) {\r\n                        Toast.makeText(MainActivity.this, t.getMessage(),\r\n                                Toast.LENGTH_LONG).show();\r\n                    }\r\n                });\r\n                builder.dismiss();\r\n\r\n            }\r\n        });\r\n        cameraBtn.setOnClickListener(new View.OnClickListener(){\r\n            @Override\r\n            public void onClick(View view) {\r\n                String fileName = \"photo\";\r\n                File storageDirectory = getExternalFilesDir(Environment.DIRECTORY_PICTURES);\r\n\r\n                try {\r\n                    File imageFile = File.createTempFile(fileName,\".jpg\",storageDirectory);\r\n                    currentPhotoPath = imageFile.getAbsolutePath();\r\n\r\n                    Uri imageUri = FileProvider.getUriForFile(MainActivity.this,\r\n                            \"com.example.myapplication.fileprovider\",imageFile);\r\n                    Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\r\n                    intent.putExtra(MediaStore.EXTRA_OUTPUT,imageUri);\r\n\r\n                    startActivityForResult(intent, CAMERACODE);\r\n\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        });\r\n\r\n        uploadBtn.setOnClickListener(new View.OnClickListener() {\r\n\r\n            @Override\r\n            public void onClick(View v) {\r\n                checkAndRequestForPermission();\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n    private void checkAndRequestForPermission() {\r\n        if (ContextCompat.checkSelfPermission(MainActivity.this, Manifest.permission.READ_EXTERNAL_STORAGE)\r\n                != PackageManager.PERMISSION_GRANTED) {\r\n            if (ActivityCompat.shouldShowRequestPermissionRationale(MainActivity.this, Manifest.permission.READ_EXTERNAL_STORAGE)) {\r\n                Toast.makeText(MainActivity.this,\"Please accept for required permission\",Toast.LENGTH_SHORT).show();\r\n            }\r\n            else\r\n            {\r\n                ActivityCompat.requestPermissions(MainActivity.this,\r\n                        new String[]{Manifest.permission.READ_EXTERNAL_STORAGE},\r\n                        PReqCode);\r\n            }\r\n        }\r\n        else\r\n            // everything goes well : we have permission to access user gallery\r\n            openGallery();\r\n    }\r\n\r\n    private void openGallery() {\r\n\r\n        Intent galleryIntent = new Intent(Intent.ACTION_GET_CONTENT);\r\n        galleryIntent.setType(\"image/*\");\r\n        startActivityForResult(galleryIntent, UPLOADCODE);\r\n    }\r\n\r\n    // when user picked an image ...\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n\r\n        if (resultCode == RESULT_OK && requestCode == UPLOADCODE && data != null ) {\r\n\r\n            // the user has successfully picked an image\r\n            // we need to save its reference to a Uri variable\r\n            pickedImgUri = data.getData() ;\r\n            imageView.setImageURI(pickedImgUri);\r\n        }\r\n        else if(resultCode == RESULT_OK && requestCode == CAMERACODE && data != null ){\r\n            Bitmap bitmap = BitmapFactory.decodeFile(currentPhotoPath);\r\n            imageView.setImageBitmap(bitmap);\r\n        }\r\n\r\n\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/myapplication/MainActivity.java	(revision 0063eb9c949761062538fba100c6971b9f77bd85)
+++ app/src/main/java/com/example/myapplication/MainActivity.java	(date 1625544783825)
@@ -183,7 +183,7 @@
 
             // the user has successfully picked an image
             // we need to save its reference to a Uri variable
-            pickedImgUri = data.getData() ;
+            pickedImgUri = data.getData();
             imageView.setImageURI(pickedImgUri);
         }
         else if(resultCode == RESULT_OK && requestCode == CAMERACODE && data != null ){
